# Infrastructure configuration for components for the JII app that will be deployed to recidiviz-dashboard-production
settings:
  context:
    location: us-central1
    project_id: recidiviz-dashboard-production
    project_number: 13012629248
    data_platform_project_number: 688733534196
    product: jii-texting
    registry_repo_name: jii-texting

# The variables set here are automatically provided to any components used in this stack.
vars:
  project_id: "{{ .settings.context.project_id }}"

# Defines which catalogs to import into this configuration to create in recidiviz-dashboard-staging
# import:

terraform:
  # Describes where the Terraform state file for these centrally-managed components is stored
  # https://atmos.tools/core-concepts/components/terraform/backends#google-cloud-storage-backend
  backend_type: gcs
  backend:
    gcs:
      bucket: recidiviz-dashboard-production-tf-state
  # This provides the default configuration for our Terraform providers
  # https://atmos.tools/core-concepts/components/terraform/providers
  providers:
    google:
      project: recidiviz-dashboard-production

components:
  terraform:
    postgres-instance:
      vars:
        create_bigquery_connection: false
        instance_key: jii_texting
        base_secret_name: jii_texting
        database_version: POSTGRES_16
        has_readonly_user: false
        region: "{{ .settings.context.location }}"
        availability_type: REGIONAL
        zone: us-central1-a
        secondary_zone: us-central1-b
        tier: db-custom-1-3840
        insights_config:
          query_insights_enabled: true
          query_string_length: 1024
          record_application_tags: false
          record_client_address: false
      metadata:
        component: vendor/cloud-sql-instance
    gcs-buckets:
      vars:
        prefix: "{{ .vars.project_id }}"
        names: 
          - jii-texting-etl-data
        log_bucket: "{{ .vars.project_id }}-gcs-object-logs"
        versioning: 
          jii-texting-etl-data: true
        location: "{{ .settings.context.location }}"
        storage_class: STANDARD
        lifecycle_rules:
          - action: 
              type: Delete
            condition:
              num_newer_versions: 3
        set_admin_roles: true
        bucket_admins: 
          jii-texting-etl-data: "serviceAccount:{{ .settings.context.data_platform_project_number }}-compute@developer.gserviceaccount.com"
      metadata:
        component: vendor/cloud-storage-bucket
    vendor/artifact-registry:
      vars:
        location: us-central1
        format: DOCKER
        repository_id: "{{ .settings.context.registry_repo_name }}"
    apps/jii-texting:
      vars:
        project_number: "{{ .settings.context.project_number }}"
        location: "{{ .settings.context.location }}"
        # Pass the `connection-name` output from our `postgres-instance` component to the jii-texting app
        cloudsql_instance: !terraform.output postgres-instance {{ .stack }} connection_name
        server_image: "{{ .settings.context.location }}-docker.pkg.dev/{{ .settings.context.project_id }}/{{ .settings.context.registry_repo_name }}/jii-texting-server"
        # The 'name' output uses the name of the first bucket, so ensure that the ETL bucket is the first one in the list
        etl_bucket_name: !terraform.output gcs-buckets {{ .stack }} name
        data_platform_project_number: "{{ .settings.context.data_platform_project_number }}"
