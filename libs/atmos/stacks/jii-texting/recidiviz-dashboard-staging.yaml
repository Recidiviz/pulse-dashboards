# Infrastructure configuration for components for the JII app that will be deployed to recidiviz-dashboard-staging
settings:
  context:
    location: us-central1
    project_id: recidiviz-dashboard-staging
    product: jii-texting

# The variables set here are automatically provided to all components used in this stack.
vars:
  project_id: "{{ .settings.context.project_id }}"

# Defines which catalogs to import into this configuration to create in recidiviz-dashboard-staging
# import:

terraform:
  # Describes where the Terraform state file for these centrally-managed components is stored
  # https://atmos.tools/core-concepts/components/terraform/backends#google-cloud-storage-backend
  backend_type: gcs
  backend:
    gcs:
      bucket: recidiviz-dashboard-staging-tf-state
  # This provides the default configuration for our Terraform providers
  # https://atmos.tools/core-concepts/components/terraform/providers
  providers:
    google:
      project: recidiviz-dashboard-staging

components:
  terraform:
    postgres-instance:
      vars:
        create_bigquery_connection: false
        instance_key: jii_texting
        base_secret_name: jii_texting
        database_version: POSTGRES_16
        has_readonly_user: false
        region: "{{ .settings.context.location }}"
        zone: us-central1-a
        secondary_zone: us-central1-b
        tier: db-custom-1-3840
        insights_config:
          query_insights_enabled: true
          query_string_length: 1024
          record_application_tags: false
          record_client_address: false
      metadata:
        component: vendor/cloud-sql-instance
    gcs-buckets:
      vars:
        prefix: "{{ .vars.project_id }}"
        names:
          - jii-texting-etl-data
        log_bucket: "{{ .vars.project_id }}-gcs-object-logs"
        versioning:
          jii-texting-etl-data: true
        location: us
        storage_class: STANDARD
        lifecycle_rules:
          - action:
              type: Delete
            condition:
              num_newer_versions: 3
      metadata:
        component: vendor/cloud-storage-bucket
    vendor/artifact-registry:
      vars:
        location: "{{ .settings.context.location }}"
        repository_id: jii-texting-server
        format: DOCKER
    apps/jii-texting:
      vars:
        location: "{{ .settings.context.location }}"
        # Pass the `connection-name` output from our `postgres-instance` component to the jii-texting app
        cloudsql_instance: !terraform.output postgres-instance connection_name
        server_image: "{{ .settings.context.location }}-docker.pkg.dev/{{ .settings.context.project_id }}/{{ .settings.context.artifact_repository }}/default"
      settings:
        context:
          artifact_repository:  '{{ (atmos.Component "vendor/artifact-registry" .stack).outputs.artifact_name }}'
