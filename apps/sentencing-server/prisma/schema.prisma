generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["tracing", "omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StateCode {
  US_AL
  US_AK
  US_AZ
  US_AR
  US_CA
  US_CO
  US_CT
  US_DE
  US_FL
  US_GA
  US_HI
  US_ID
  US_IL
  US_IN
  US_IA
  US_KS
  US_KY
  US_LA
  US_ME
  US_MD
  US_MA
  US_MI
  US_MN
  US_MS
  US_MO
  US_MT
  US_NE
  US_NV
  US_NH
  US_NJ
  US_NM
  US_NY
  US_NC
  US_ND
  US_OH
  US_OK
  US_OR
  US_PA
  US_RI
  US_SC
  US_SD
  US_TN
  US_TX
  US_UT
  US_VT
  US_VA
  US_WA
  US_WV
  US_WI
  US_WY
}

model Staff {
  externalId      String    @id
  pseudonymizedId String    @unique
  stateCode       StateCode
  fullName        String

  hasLoggedIn Boolean @default(false)

  email String
  Cases Case[]
}

model Client {
  externalId      String    @id
  pseudonymizedId String    @unique
  stateCode       StateCode
  fullName        String

  gender    String
  county    String
  birthDate DateTime
  Cases     Case[]
}

enum Charge {
  Misdemeanor
  Felony
}

enum Pronouns {
  HeHim
  SheHer
  TheyThem
}

enum SubstanceUseDiagnosis {
  None
  Mild
  Moderate
  Severe
}

enum AsamCareRecommendation {
  LongTermRemissionMonitoring
  OutpatientTherapy
  MedicallyManagedOutpatient
  IntensiveOutpatient
  HighIntensityOutpatient
  MedicallyManagedIntensiveOutpatient
  ClinicallyManagedLowIntensityResidential
  ClinicallyManagedHighIntensityResidential
  MedicallyManagedResidential
  MedicallyManagedInpatient
  None
}

enum MentalHealthDiagnosis {
  BipolarDisorder
  BorderlinePersonalityDisorder
  DelusionalDisorder
  MajorDepressiveDisorder
  PsychoticDisorder
  Schizophrenia
  SchizoaffectiveDisorder
  Other
  None
}

enum Plea {
  Guilty
  NotGuilty
  AlfordPlea
}

enum NeedToBeAddressed {
  AngerManagement
  CaseManagement
  DomesticViolenceIssues
  ClothingAndToiletries
  Education
  FamilyServices
  FoodInsecurity
  FinancialAssistance
  Healthcare
  GeneralReEntrySupport
  HousingOpportunities
  JobTrainingOrOpportunities
  MentalHealth
  SubstanceUse
  Transportation
  Other
}

enum CaseStatus {
  NotYetStarted
  InProgress
  Complete
}

enum CaseRecommendation {
  Probation
  Rider
  Term
  None
}

enum PriorCriminalHistoryCriterion {
  None
  Significant
}

enum DiagnosedMentalHealthDiagnosisCriterion {
  BipolarDisorder
  BorderlinePersonalityDisorder
  DelusionalDisorder
  MajorDepressiveDisorder
  PsychoticDisorder
  Schizophrenia
  SchizoaffectiveDisorder
  Other
  Any
}

enum AsamLevelOfCareRecommendationCriterion {
  LongTermRemissionMonitoring
  OutpatientTherapy
  MedicallyManagedOutpatient
  IntensiveOutpatient
  HighIntensityOutpatient
  MedicallyManagedIntensiveOutpatient
  ClinicallyManagedLowIntensityResidential
  ClinicallyManagedHighIntensityResidential
  MedicallyManagedResidential
  MedicallyManagedInpatient
  Any
}

enum DiagnosedSubstanceUseDisorderCriterion {
  Mild
  Moderate
  Severe
  Any
}

enum OnboardingTopic {
  OffenseLsirScore
  PrimaryNeeds
  AdditionalNeeds
  Done
}

model Opportunity {
  id                  String              @id @default(cuid())
  opportunityName     String
  description         String
  providerName        String
  providerPhoneNumber String
  providerWebsite     String
  providerAddress     String
  totalCapacity       Int
  availableCapacity   Int
  needsAddressed      NeedToBeAddressed[]

  // Eligibility Criteria
  eighteenOrOlderCriterion                              Boolean
  developmentalDisabilityDiagnosisCriterion             Boolean
  minorCriterion                                        Boolean
  noCurrentOrPriorSexOffenseCriterion                   Boolean
  noCurrentOrPriorViolentOffenseCriterion               Boolean
  noPendingFelonyChargesInAnotherCountyOrStateCriterion Boolean
  entryOfGuiltyPleaCriterion                            Boolean
  veteranStatusCriterion                                Boolean
  PriorCriminalHistoryCriterion                         PriorCriminalHistoryCriterion[]
  diagnosedMentalHealthDiagnosisCriterion               DiagnosedMentalHealthDiagnosisCriterion[]
  asamLevelOfCareRecommendationCriterion                AsamLevelOfCareRecommendationCriterion[]
  diagnosedSubstanceUseDisorderCriterion                DiagnosedSubstanceUseDisorderCriterion[]
  minLsirScoreCriterion                                 Int?
  maxLsirScoreCriterion                                 Int?

  cases Case[]

  // This is the best way to identify unique opportunities
  @@unique([opportunityName, providerPhoneNumber])
}

model Case {
  externalId String    @id
  id         String    @unique @default(cuid())
  stateCode  StateCode

  // These relationships are only optional because data loading for staff, client,
  // and cases happens independently and in random order, so the referenced staff
  // or client may not exist yet
  Staff    Staff?  @relation(fields: [staffId], references: [externalId])
  staffId  String?
  Client   Client? @relation(fields: [clientId], references: [externalId])
  clientId String?

  dueDate           DateTime
  completionDate    DateTime
  sentenceDate      DateTime
  assignedDate      DateTime
  county            String
  lsirLevel         String?
  reportType        String
  // Whether the LSIR score is locked and cannot be changed
  isLsirScoreLocked Boolean  @default(false)

  // Mutable Attributes
  lsirScore Int?

  primaryCharge    Charge?
  secondaryCharges Charge[]

  previouslyIncarceratedOrUnderSupervision Boolean?
  hasPreviousFelonyConviction              Boolean?
  hasPreviousViolentOffenseConviction      Boolean?
  hasPreviousSexOffenseConviction          Boolean?
  previousTreatmentCourt                   String?
  hasPreviousTreatmentCourt                Boolean?

  substanceUseDisorderDiagnosis SubstanceUseDiagnosis?
  asamCareRecommendation        AsamCareRecommendation?

  mentalHealthDiagnoses      MentalHealthDiagnosis[]
  otherMentalHealthDiagnosis String?

  hasDevelopmentalDisability         Boolean?
  isVeteran                          Boolean?
  plea                               Plea?
  hasOpenChildProtectiveServicesCase Boolean?
  needsToBeAddressed                 NeedToBeAddressed[]
  otherNeedToBeAddressed             String?

  currentOnboardingTopic OnboardingTopic @default(OffenseLsirScore)

  // Case Recommendation Fields
  status                   CaseStatus          @default(NotYetStarted)
  selectedRecommendation   CaseRecommendation?
  recommendedOpportunities Opportunity[]
}
