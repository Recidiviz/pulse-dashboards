generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["tracing", "omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StateCode {
  AL
  AK
  AZ
  AR
  CA
  CO
  CT
  DE
  FL
  GA
  HI
  ID
  IL
  IN
  IA
  KS
  KY
  LA
  ME
  MD
  MA
  MI
  MN
  MS
  MO
  MT
  NE
  NV
  NH
  NJ
  NM
  NY
  NC
  ND
  OH
  OK
  OR
  PA
  RI
  SC
  SD
  TN
  TX
  UT
  VT
  VA
  WA
  WV
  WI
  WY
}

model Staff {
  externalId      String    @id
  pseudonymizedId String    @unique
  stateCode       StateCode
  fullName        String

  hasLoggedIn Boolean @default(false)

  email String
  Cases Case[]
}

model Client {
  externalId      String    @id
  pseudonymizedId String    @unique
  stateCode       StateCode
  fullName        String

  gender    String
  county    String
  birthDate DateTime
  Cases     Case[]
}

enum Charge {
  Misdemeanor
  Felony
}

enum Pronouns {
  HeHim
  SheHer
  TheyThem
}

enum VeteranStatus {
  Veteran
  NonVeteran
}

enum SubstanceUseDiagnosis {
  None
  Mild
  Moderate
  Severe
}

enum AsamCareRecommendation {
  LongTermRemissionMonitoring
  OutpatientTherapy
  MedicallyManagedOutpatient
  IntensiveOutpatient
  HighIntensityOutpatient
  MedicallyManagedIntensiveOutpatient
  ClinicallyManagedLowIntensityResidential
  ClinicallyManagedHighIntensityResidential
  MedicallyManagedResidential
  MedicallyManagedInpatient
  None
}

enum MentalHealthDiagnosis {
  BipolarDisorder
  BorderlinePersonalityDisorder
  DelusionalDisorder
  MajorDepressiveDisorder
  PsychoticDisorder
  Schizophrenia
  SchizoaffectiveDisorder
  Other
  None
}

enum Plea {
  Guilty
  NotGuilty
  Alford
}

enum NeedToBeAddressed {
  AngerManagement
  CaseManagement
  DomesticViolenceIssues
  Education
  FamilyServices
  FoodInsecurity
  GeneralReEntrySupport
  HousingOpportunities
  JobTrainingOrOpportunities
  MentalHealth
  SubstanceUse
  Other
}

enum CaseStatus {
  NotYetStarted
  InProgress
  Complete
}

enum CaseRecommendation {
  Probation
  Rider
  Term
  None
}

model Opportunity {
  id                  String              @id @default(cuid())
  opportunityName     String
  description         String
  providerName        String
  providerPhoneNumber String
  providerWebsite     String
  providerAddress     String
  totalCapacity       Int
  availableCapacity   Int
  needsAddressed      NeedToBeAddressed[]
  // TODO: Add fields for the eligibility criteria

  cases Case[]

  // This is the best way to identify unique opportunities
  @@unique([opportunityName, providerPhoneNumber])
}

model Case {
  externalId String    @id
  id         String    @unique @default(cuid())
  stateCode  StateCode

  // These relationships are only optional because data loading for staff, client,
  // and cases happens independently and in random order, so the referenced staff
  // or client may not exist yet
  Staff    Staff?  @relation(fields: [staffId], references: [externalId])
  staffId  String?
  Client   Client? @relation(fields: [clientId], references: [externalId])
  clientId String?

  dueDate        DateTime
  completionDate DateTime
  sentenceDate   DateTime
  assignedDate   DateTime
  county         String
  lsirLevel      String
  reportType     String

  // Mutable Attributes
  lsirScore Int?

  primaryCharge    Charge?
  secondaryCharges Charge[]

  previouslyIncarceratedOrUnderSupervision Boolean?
  hasPreviousFelonyConviction              Boolean?
  hasPreviousViolentOffenseConviction      Boolean?
  hasPreviousSexOffenseConviction          Boolean?
  previousTreatmentCourt                   String?

  substanceUseDisorderDiagnosis SubstanceUseDiagnosis?
  asamCareRecommendation        AsamCareRecommendation?

  mentalHealthDiagnoses      MentalHealthDiagnosis[]
  otherMentalHealthDiagnosis String?

  hasDevelopmentalDisability         Boolean?
  veteranStatus                      VeteranStatus?
  plea                               Plea?
  hasOpenChildProtectiveServicesCase Boolean?
  needsToBeAddressed                 NeedToBeAddressed[]
  otherNeedToBeAddressed             String?

  // Case Recommendation Fields
  status                   CaseStatus          @default(NotYetStarted)
  selectedRecommendation   CaseRecommendation?
  recommendedOpportunities Opportunity[]
}
