{
  "name": "sentencing-server",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/sentencing-server/src",
  "projectType": "application",
  "targets": {
    "lint-files": {
      "executor": "nx:run-commands",
      "options": {
        "command": "eslint --max-warnings 0",
        "cwd": "{projectRoot}"
      }
    },
    "typecheck": {
      "executor": "nx:run-commands",
      "dependsOn": ["prisma-generate"],
      "options": {
        "commands": [
          "tsc -p ./tsconfig.app.json",
          "tsc -p ./tsconfig.spec.json"
        ],
        "cwd": "{projectRoot}"
      }
    },
    "docker": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}"
      },
      "configurations": {
        "dev": {
          "command": "docker compose up --wait"
        },
        "ci": {
          "command": "echo 'No docker for CI'"
        }
      },
      "defaultConfiguration": "dev"
    },
    "dev": {
      "executor": "nx:run-commands",
      "dependsOn": ["docker", "prisma-seed"],
      "options": {
        "command": "vite-node --watch src/main.ts",
        "cwd": "{projectRoot}"
      }
    },
    "build": {
      "executor": "@nx/esbuild:esbuild",
      "outputs": ["{options.outputPath}"],
      "options": {
        "platform": "node",
        "outputPath": "dist/apps/sentencing-server",
        "bundle": true,
        "main": "{projectRoot}/src/main.ts",
        "tsConfig": "{projectRoot}/tsconfig.app.json",
        "generatePackageJson": true,
        "target": "node20",
        "minify": true,
        "assets": [
          "{projectRoot}/prisma/schema.prisma",
          "{projectRoot}/prisma/migrations/**/*"
        ]
      },
      "configurations": {
        "dev": {},
        "staging": {}
      },
      "defaultConfiguration": "dev"
    },
    "preview": {
      "executor": "@nx/vite:preview-server",
      "dependsOn": ["docker", "prisma-seed"],
      "options": {
        "buildTarget": "sentencing-server:build"
      }
    },
    "test": {
      "executor": "nx:run-commands",
      "dependsOn": ["docker", "prisma-generate"],
      "outputs": ["{workspaceRoot}/coverage/apps/sentencing-server"],
      "cache": true,
      "options": {
        "command": "prisma db push && vitest",
        "cwd": "{projectRoot}"
      }
    },
    "container": {
      "executor": "@nx-tools/nx-container:build",
      "dependsOn": ["build"],
      "cache": true,
      "options": {
        "engine": "docker",
        "platforms": ["linux/amd64"],
        "build-args": ["-t"]
      },
      "configurations": {
        "dev": {
          "push": false
        },
        "staging": {
          "push": true,
          "tags": [
            "us-central1-docker.pkg.dev/recidiviz-dashboard-staging/cloud-run-source-deploy/sentencing-server:latest"
          ]
        }
      },
      "defaultConfiguration": "dev"
    },
    "deploy-migrate-db": {
      "executor": "nx:run-commands",
      "dependsOn": [{ "target": "container", "params": "forward" }],
      "configurations": {
        "staging": {
          "command": "gcloud run jobs deploy sentencing-server-migrate-db --project recidiviz-dashboard-staging --image us-central1-docker.pkg.dev/recidiviz-dashboard-staging/cloud-run-source-deploy/sentencing-server:latest --set-cloudsql-instances recidiviz-dashboard-staging:us-central1:sentencing-db --region us-central1 --execute-now --command yarn --args prisma,migrate,deploy"
        }
      },
      "defaultConfiguration": "staging"
    },
    "deploy-app": {
      "executor": "@nx-extend/gcp-cloud-run:deploy",
      "dependsOn": [
        { "target": "container", "params": "forward" },
        { "target": "deploy-migrate-db", "params": "forward" }
      ],
      "options": {
        "region": "us-central1"
      },
      "configurations": {
        "staging": {
          "project": "recidiviz-dashboard-staging",
          "image": "us-central1-docker.pkg.dev/recidiviz-dashboard-staging/cloud-run-source-deploy/sentencing-server:latest",
          "cloudSqlInstance": "recidiviz-dashboard-staging:us-central1:sentencing-db",
          "memory": "512Mi"
        }
      },
      "defaultConfiguration": "staging"
    },
    "prisma-generate": {
      "executor": "@nx-tools/nx-prisma:generate",
      "cache": true,
      "options": {
        "schema": "apps/sentencing-server/prisma/schema.prisma"
      }
    },
    "prisma-format": {
      "executor": "@nx-tools/nx-prisma:format",
      "options": {
        "schema": "apps/sentencing-server/prisma/schema.prisma"
      }
    },
    "prisma-migrate": {
      "dependsOn": ["docker"],
      "executor": "@nx-tools/nx-prisma:migrate",
      "options": {
        "schema": "apps/sentencing-server/prisma/schema.prisma"
      }
    },
    "prisma-pull": {
      "executor": "@nx-tools/nx-prisma:pull",
      "options": {
        "schema": "apps/sentencing-server/prisma/schema.prisma"
      }
    },
    "prisma-push": {
      "executor": "@nx-tools/nx-prisma:push",
      "dependsOn": ["docker"],
      "options": {
        "schema": "apps/sentencing-server/prisma/schema.prisma"
      }
    },
    "prisma-deploy": {
      "executor": "@nx-tools/nx-prisma:deploy",
      "options": {
        "schema": "apps/sentencing-server/prisma/schema.prisma"
      }
    },
    "prisma-status": {
      "executor": "@nx-tools/nx-prisma:status",
      "options": {
        "schema": "apps/sentencing-server/prisma/schema.prisma"
      }
    },
    "prisma-studio": {
      "executor": "@nx-tools/nx-prisma:studio",
      "options": {
        "schema": "apps/sentencing-server/prisma/schema.prisma"
      }
    },
    "prisma-reset": {
      "executor": "@nx-tools/nx-prisma:reset",
      "options": {
        "schema": "apps/sentencing-server/prisma/schema.prisma"
      }
    },
    "prisma-resolve": {
      "executor": "@nx-tools/nx-prisma:resolve",
      "options": {
        "schema": "apps/sentencing-server/prisma/schema.prisma"
      }
    },
    "prisma-seed": {
      "executor": "@nx-tools/nx-prisma:seed",
      "dependsOn": ["docker", "prisma-push", "prisma-generate"],
      "options": {
        "schema": "apps/sentencing-server/prisma/schema.prisma",
        "script": "apps/sentencing-server/prisma/seed.ts"
      }
    },
    "prisma-validate": {
      "executor": "@nx-tools/nx-prisma:validate",
      "options": {
        "schema": "apps/sentencing-server/prisma/schema.prisma"
      }
    }
  },
  "tags": []
}
