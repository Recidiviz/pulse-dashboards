{
  "extends": [
    "plugin:@nx/react-base",
    "plugin:@nx/react-jsx",
    "../../.eslintrc.json"
  ],
  "ignorePatterns": ["!**/*", "public/"],
  "overrides": [
    {
      "extends": ["plugin:@nx/react-typescript"],
      "files": ["*.ts", "*.tsx"],
      "rules": {
        // TODO TS re-enable this after repo is ported to TS
        "@typescript-eslint/no-explicit-any": "off",
        // TODO TS re-enable this after repo is ported to TS
        "@typescript-eslint/ban-ts-comment": "off",
        // common workaround for strict return types
        "react/jsx-no-useless-fragment": [
          "error",
          {
            "allowExpressions": true
          }
        ]
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "rules": {}
    },
    {
      "files": ["src/cucumber/**/*", "wdio.conf.js"],
      "extends": ["plugin:wdio/recommended"],
      "rules": {}
    },
    {
      "extends": ["plugin:vitest-globals/recommended"],
      "files": [
        "**/__tests__/**/*",
        "**/__mocks__/**/*",
        "*.test.ts",
        "*.test.tsx",
        "*.test.js",
        "*.test.jsx"
      ],
      "env": {
        "vitest-globals/env": true
      },
      "globals": {
        "fetchMock": true
      }
    },
    {
      "files": ["src/**/*"],
      "rules": {
        "no-restricted-globals": ["error", "jest"],
        "no-restricted-properties": [
          "error",
          {
            "object": "window",
            "property": "analytics",
            "message": "Do not use Segment analytics directly, use the AnalyticsStore instead."
          }
        ]
      }
    },
    {
      "files": ["src/**/AnalyticsStore.*"],
      "rules": {
        "no-restricted-properties": [
          "off",
          {
            "object": "window",
            "property": "analytics"
          }
        ]
      }
    },
    {
      "files": ["e2e/**/*.{ts,js,tsx,jsx}"],
      "rules": {}
    }
  ],
  "rules": {
    "no-console": [
      "error",
      {
        "allow": ["warn", "error"]
      }
    ],
    "react/display-name": ["error"],
    "react/react-in-jsx-scope": "off",

    "no-restricted-syntax": [
      "error",
      {
        "message": "Do not use Firestore's setDoc directly, use the FirestoreStore.updateDocument method instead.",
        "selector": "CallExpression[callee.name='setDoc']"
      }
    ]
  },
  "settings": {
    "componentWrapperFunctions": ["observer"]
  }
}
