{
  "name": "staff",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/staff/src",
  "projectType": "application",
  "targets": {
    "lint-files": {
      "executor": "nx:run-commands",
      "options": {
        "command": "eslint --max-warnings 0",
        "cwd": "{projectRoot}"
      }
    },
    "typecheck": {
      "executor": "nx:run-commands",
      "dependsOn": [
        {
          "projects": ["@sentencing-server/prisma"],
          "target": "prisma-generate"
        }
      ],
      "options": {
        "commands": [
          "tsc -p ./tsconfig.app.json",
          "tsc -p ./tsconfig.spec.json"
        ],
        "cwd": "{projectRoot}"
      }
    },
    "test": {
      "executor": "nx:run-commands",
      "outputs": ["{workspaceRoot}/coverage/apps/staff"],
      "cache": true,
      "options": {
        "command": "vitest",
        "cwd": "{projectRoot}"
      }
    },

    "env-dev-spa": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "vite-node tools/loadEnvironment.ts --env env_dev_spa --filename .env.dev-spa"
      }
    },
    "dev-spa": {
      "executor": "nx:run-commands",
      "dependsOn": ["env-dev-spa"],
      "options": { "command": "vite dev --force", "cwd": "{projectRoot}" }
    },
    "dev": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["nx dev-spa staff", "nx dev staff-shared-server"]
      }
    },
    "env-dev-be": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "vite-node tools/loadEnvironment.ts --env env_dev_spa env_dev_be_spa --filename .env.dev-be"
      }
    },
    "dev-be": {
      "executor": "nx:run-commands",
      "dependsOn": ["env-dev-be"],
      "options": {
        "commands": ["nx dev-spa staff", "nx dev staff-shared-server"]
      }
    },

    "env-dev-demo": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "vite-node tools/loadEnvironment.ts --env env_dev_spa env_dev_demo_spa --filename .env.demo"
      }
    },
    "demo": {
      "executor": "nx:run-commands",
      "dependsOn": ["env-dev-demo"],
      "options": {
        "commands": ["nx dev-spa staff", "nx dev staff-shared-server -c demo"]
      }
    },

    "update-workflows-fixture": {
      "executor": "nx:run-commands",
      "cache": true,
      "inputs": [
        "{projectRoot}/tools/**/*",
        "{workspaceRoot}/libs/datatypes/**/*"
      ],
      "outputs": [
        "{workspaceRoot}/dist/firestore-emulator-fixtures/apps/staff"
      ],
      "options": {
        "cwd": "{projectRoot}",
        "commands": [
          "mkdir -p ../../dist/firestore-emulator-fixtures/apps/staff",
          "firebase emulators:exec --project=demo-dev --only firestore --export-on-exit ../../dist/firestore-emulator-fixtures/apps/staff 'NODE_OPTIONS=\"--unhandled-rejections=strict\" vite-node tools/loadWorkflowsFixtures.ts'"
        ],

        "parallel": false
      }
    },
    "firebase-offline": {
      "executor": "nx:run-commands",
      "dependsOn": ["update-workflows-fixture"],
      "options": {
        "command": "firebase --project=demo-dev emulators:start --only auth,firestore --import ../../dist/firestore-emulator-fixtures/apps/staff",
        "cwd": "{projectRoot}"
      }
    },
    "offline": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "vite dev",
          "cd ../../ && nx firebase-offline staff",
          "cd ../../ && nx offline staff-shared-server"
        ],
        "cwd": "{projectRoot}"
      }
    },
    "offline-python": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx offline staff",
          "nx python-backend-offline staff-shared-server"
        ],
        "cwd": "{workspaceRoot}"
      }
    },
    "env-prod": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "vite-node tools/loadEnvironment.ts --env env_production --filename .env.build"
      }
    },
    "build": {
      "executor": "@nx/vite:build",
      "dependsOn": [
        {
          "projects": ["@sentencing-server/prisma"],
          "target": "prisma-generate"
        },
        "env-prod"
      ],
      "options": {
        "outputPath": "{workspaceRoot}/dist/apps/staff"
      }
    },
    "env-staging": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "vite-node tools/loadEnvironment.ts --env env_staging --filename .env.build-staging"
      }
    },
    "build-staging": {
      "executor": "@nx/vite:build",
      "dependsOn": [
        {
          "projects": ["@sentencing-server/prisma"],
          "target": "prisma-generate"
        },
        "env-staging"
      ],
      "options": {
        "outputPath": "{workspaceRoot}/dist/apps/staff"
      }
    },
    "env-preview-ci": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "vite-node tools/loadEnvironment.ts --env env_staging --filename .env.build-preview-ci"
      }
    },
    "build-preview-ci": {
      "executor": "@nx/vite:build",
      "dependsOn": [
        {
          "projects": ["@sentencing-server/prisma"],
          "target": "prisma-generate"
        },
        "env-preview-ci"
      ],
      "options": {
        "outputPath": "{workspaceRoot}/dist/apps/staff"
      }
    },
    "env-demo": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "vite-node tools/loadEnvironment.ts --env env_staging_demo --filename .env.build-demo"
      }
    },
    "build-demo": {
      "executor": "@nx/vite:build",
      "dependsOn": [
        {
          "projects": ["@sentencing-server/prisma"],
          "target": "prisma-generate"
        },
        "env-demo"
      ],
      "options": {
        "outputPath": "{workspaceRoot}/dist/apps/staff"
      }
    },
    "env-build-e2e": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "commands": ["cp .env.offline .env.build-e2e"]
      }
    },
    "build-e2e": {
      "executor": "@nx/vite:build",
      "dependsOn": [
        {
          "projects": ["@sentencing-server/prisma"],
          "target": "prisma-generate"
        },
        "env-build-e2e"
      ],
      "options": {
        "outputPath": "{workspaceRoot}/dist/apps/staff"
      }
    },
    "verify-feature-variant-documentation": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "bash -c '. load_environment.sh env_sync_content && vite-node tools/verifyFeatureVariantDocumentation.ts'"
      }
    }
  }
}
